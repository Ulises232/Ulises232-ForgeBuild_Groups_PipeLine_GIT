"""Utilities for generating the ForgeBuild icon without storing a binary."""

from __future__ import annotations

import base64
from pathlib import Path

ICON_B64 = """
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
/IRzFwq4pDrn+nsWtQjAAZ1WHLuVHz4NnVsDMqYHkEHeFDbXIxuNOHEeQX/g2Bu4uUeWqnEnT22v
7GDmXLnld9qR7z+7TacVCcX44d4BLT/DrCAH/WLyiRxD4Wh2C86d73L2QpetjYJQrG4FtRoBOuuR
IowJYDgvoJgx9XxNaDkZ+zofCsfaeiTPxl++amoRAJQjQRGYOALA7DuCcUosoYAsVOtcf8+iNgHs
77W7+ff4J13ftNupCzsOoJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwF
oJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwFoJwFoFxtvhgSCjdcFvvFjdHtxKP8IYElqkUAzsFWt4D1
yFpgMb83M1I42Ay0m/bdwKUTKZ/8vb7j0/Nd8mzxv8IRBbJcuHI9p9WQlR8JVvrr4SMi8PBxMjpD
/HO4QUezEWnlqz8KrPQIMLL/EvAcRanHfkAtAgBW+iQNy2RvA5WzAJSzAJSzAJSzAJSzAJSzAJSz
AJSzAJSzAJSzAJSzAJSzAJSzAJSzAJSzAJSzAJSzAJSzAJT7D3/X+scfdfFFAAAAAElFTkSuQmCC
iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAEVElEQVR4nO3YsYqcVQCG4TOSTbW3
ELfRNYMmhYsEtLHODViJnfeQVEFQ0phGEJEISrAQ+zQKQUFBhICIEDagxLVX6012bXRtRCzGnNl5
n6ebU/x81cs5s9hZ7h0PIOmJ2QOAeQQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQA
wgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQA
wgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQA
wgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAwgQAws7M
HrCu9i8fzJ7Aiu3ePjd7wtpxA4AwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAw
AYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAw
AYAwAYAwAYAwAYAwAYAwAYAwAYAwAYCwxc5y73j2CFZv//LByr+5e/vcyr/JXG4AECYAEHZm9gDG
uHf3q/Hd9z+c/P7szhfj5ocfn5wvFmNsb2+PG++8Nz6/8+XEpWwaAVgDh4eH45XXXv/X8+Uzu+OD
d28IACvlCXBK3Nu/Px4+fDR7BhtGAE6JFy+9MN64/vbsGWwYT4A1sLW1NT756P2T31euvTl+/OnB
yfnZs1vj4nPPjq+/+dYTgJUSgDXwX/4DOL/71Pj01s3HPY0N5wlwSvz62+/jwcEvs2ewYdwA1thf
T4Cjo6MxxhhXr701eRGbRgDWwIVLL//j+fnnX3q8Q8jxBIAwAYAwAYAwAYAwAYAwAYAwAYAwAYAw
AYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYAwAYCw
xc5y73j2CP52/9bPsyf8755+9cnZE/iTGwCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE
CQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE
CQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCE
CQCECQCECQCECQCECQCECQCECQCECQCECQCECQCECQCELXaWe8ezRwBzuAFAmABAmABAmABAmABA
mABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABA
mABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABAmABA
mABA2B+6a1wD5mDiVAAAAABJRU5ErkJggg==
"""

def ensure_icon(destination: Path | str | None = None) -> Path:
    """Write the compiled icon to *destination* and return the path."""
    target = Path(destination) if destination else Path(__file__).resolve().parents[1] / 'assets' / 'forgebuild.ico'
    target.parent.mkdir(parents=True, exist_ok=True)
    payload = base64.b64decode(''.join(ICON_B64.splitlines()))
    target.write_bytes(payload)
    return target


if __name__ == '__main__':
    path = ensure_icon()
    print(f'Icon generated at {path}')
